var t=Object.defineProperty,e=(e,s,r)=>(((e,s,r)=>{s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[s]=r})(e,"symbol"!=typeof s?s+"":s,r),r);const s=(t=0)=>{try{return t.toString().split(".")[1].length}catch(e){return 0}},r=(t=0,e=0)=>{const r=s(t),i=s(e),n=Math.pow(10,Math.max(r,i));return(t*n+e*n)/n},i=(t=0,e=0)=>{const r=s(t),i=s(e),n=Math.pow(10,Math.max(r,i));return Number(((t*n-e*n)/n).toFixed(r>=i?r:i))},n=(t=0,e=0)=>{const r=s(t),i=s(e)-r;return Number(t.toString().replace(".",""))/Number(e.toString().replace(".",""))*Math.pow(10,i)};class a{constructor(){e(this,"mean",((t=0)=>t)),e(this,"sum",0),e(this,"times",[]),e(this,"preTime",performance.now()),this.mean=this.gmean,self.requestAnimationFrame((()=>this.prepare()))}amean(t=0){if(this.times.push(t),this.sum=r(this.sum,t),this.times.length>720){const t=this.times.splice(0,this.times.length-720);this.sum-=t.reduce(r,0)}return n(this.sum,this.times.length)}gmean(t=0){const e=Math.log(t),s=this.amean(e);return Math.exp(s)}prepare(){self.requestAnimationFrame((()=>{this.times.length<=120?this.prepare():(this.times.length=0,this.sum=0,this.handler())}));const t=performance.now();this.mean(i(t,this.preTime)),this.preTime=t}handler(){self.requestAnimationFrame((()=>this.handler()));const t=performance.now(),e=this.mean(i(t,this.preTime));this.preTime=t;const s=n(1e3,e),r=new Date,a=r.getHours().toString().padStart(2,"0"),h=r.getMinutes().toString().padStart(2,"0"),m=r.getSeconds().toString().padStart(2,"0"),o=r.getMilliseconds().toString().padStart(3,"0");this.send(s,`${a}:${h}:${m}.${o}`)}send(t=0,e=""){self.postMessage({framerate:t,timestamp:e})}setSender(t){this.send=t}}var h=new a;export default h;export{a as Timer};
